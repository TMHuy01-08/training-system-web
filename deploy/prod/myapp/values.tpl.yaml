# Default values for myapp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1
secretKeyBase: ${KEY_BASE}
image:
  repository: ${IMAGE_REPOSITORY}
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ${TAG}
healthcheck:
  livenessProbe:
    httpGet:
      path: /
      port: http
    periodSeconds: 5
    initialDelaySeconds: 50
  readinessProbe:
    httpGet:
      path: /
      port: http
    periodSeconds: 5
    initialDelaySeconds: 50
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: ${PORT}

ingress:
  enabled: false

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 300m
    memory: 512Mi
  requests:
    cpu: 200m
    memory: 128Mi

autoscaling:
  enabled: false

nodeSelector: {}

tolerations: []

affinity: {}

sish-client:
  dns_resolver:
    enabled: false
  enabled: ${SISH_ENABLED}
  image:
    repository: kroniak/ssh-client
    tag: latest
  service:
    name: ssh-tunnel
  services:
    sish:
      domain: ${DOMAIN}
      port: 22222
      request:
        domain: ${SUB_DOMAIN}
        port: 80
      from:
        domain: ${FROM_DOMAIN}
        port: ${FROM_PORT}

mysql:
  enabled: true
  image:
    tag: 8.0.30-debian-11-r19
  architecture: standalone
  auth:
    rootPassword: rootpass
    createDatabase: true
    database: db
    username: user
    password: pass
  primary:
    livenessProbe:
      enabled: true
      initialDelaySeconds: 100
    readinessProbe:
      enabled: true
      initialDelaySeconds: 100
    startupProbe:
      enabled: true
      initialDelaySeconds: 100
    resources:
      limits:
        cpu: 200m
        memory: 256Mi
      requests:
        cpu: 100m
        memory: 128Mi
    persistence:
      enabled: true
      storageClass: microk8s-hostpath